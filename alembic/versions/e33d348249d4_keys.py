"""keys

Revision ID: e33d348249d4
Revises: 806f540536ef
Create Date: 2024-08-26 22:38:03.605610

"""
from typing import Sequence, Union

from alembic import op
from sqlalchemy.sql import table, column
from sqlalchemy import String, DateTime
from datetime import datetime
import uuid
import sqlalchemy as sa

from consumer.common.test import test_bycrypt, test1_bycrypt



# revision identifiers, used by Alembic.
revision: str = 'e33d348249d4'
down_revision: Union[str, None] = '806f540536ef'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('keys',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('type', sa.String(), nullable=True),
    sa.Column('password', sa.String(), nullable=True),
    sa.Column('createUp', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )

    keys_table = table(
        'keys',
        column('id', String),
        column('type', String),
        column('password', String),
        column('createUp', DateTime)
    )

    op.bulk_insert(keys_table,[
        {
            'id': str(uuid.uuid4()),
            'type': 'create',
            'password': '$2a$12$lgWnPPJYQudOtzCicfTe2OpuVgwOcxcxCWbmsUzJM.2s1Spg.xLt6',
            'createUp': datetime.utcnow()
        },
        {
            'id': str(uuid.uuid4()),
            'type': 'create',
            'password': '$2a$12$LspTCTTDMqcQTkyQTD7RruxzJZkX9YOYnNk7886Syy5GUoz6tJYiq',
            'createUp': datetime.utcnow()
        },
        {
            'id': str(uuid.uuid4()),
            'type': 'create',
            'password': '$2a$12$GcNG.jr2y3scsc4TelIBEOjc89xLh5lKlabmJeOUoROPycyYDFUXm',
            'createUp': datetime.utcnow()
        },
        {
            'id': str(uuid.uuid4()),
            'type': 'update',
            'password': '$2a$12$LPQZ00AB9mJf1CkdZCBE..u7xF47/yYejQOAgVtQ2DaNi215FBzS2',
            'createUp': datetime.utcnow()
        },
        {
            'id': str(uuid.uuid4()),
            'type': 'update',
            'password': '$2a$12$ucuj.1kuxCjdZQYZiqQaEuzX.AwDDAMayatYikua1VyFLtYD53JAW',
            'createUp': datetime.utcnow()
        },
        {
            'id': str(uuid.uuid4()),
            'type': 'update',
            'password': '$2a$12$TLfDKvXRzQO/EijX73EANO4mXpldEDqFYif8eLg9EytxD/YTMfvKS',
            'createUp': datetime.utcnow()
        },
        {
            'id': str(uuid.uuid4()),
            'type': 'delete',
            'password': '$2a$12$Uvbq4nhZAXqCN8aYzIuo9eBno1XtPPUpKG0pFAITTFn7JcBJKaHIe',
            'createUp': datetime.utcnow()
        },
        {
            'id': str(uuid.uuid4()),
            'type': 'delete',
            'password': '$2a$12$Fl9gvGG1WdJNk9iPdV1eR.t06pxRgj7Hw.pQIWKI3HcyURmgVZBI.',
            'createUp': datetime.utcnow()
        },
        {
            'id': str(uuid.uuid4()),
            'type': 'delete',
            'password': '$2a$12$vohoVqZgnbkbG.UgeWSpEuggohV1AQsYBT0mv4h5xthGsQlx8y/Ti',
            'createUp': datetime.utcnow()
        },
        {
            'id': str(uuid.uuid4()),
            'type': 'main',
            'password': '$2a$12$nUNK5NBlmbooNPrUZKorWOEvLhHxuwv5ceSPTzoS/O3YjMwUjm2CS',
            'createUp': datetime.utcnow()
        },
        # for test
        {
            'id': str(uuid.uuid4()),
            'type': 'create',
            'password': test_bycrypt,
            'createUp': datetime.utcnow()
        },
        {
            'id': str(uuid.uuid4()),
            'type': 'update',
            'password': test_bycrypt,
            'createUp': datetime.utcnow()
        },
        {
            'id': str(uuid.uuid4()),
            'type': 'delete',
            'password': test_bycrypt,
            'createUp': datetime.utcnow()
        },
        {
            'id': str(uuid.uuid4()),
            'type': 'main',
            'password': test1_bycrypt,
            'createUp': datetime.utcnow()
        },

    ])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('keys')
    # ### end Alembic commands ###
