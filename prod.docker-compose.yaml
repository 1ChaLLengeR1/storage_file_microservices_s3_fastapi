services:
  redis_backend_microservice:
    image: "redis:alpine"
    volumes:
      - .:/app
    expose:
      - 6379
    ports:
      - "6379:6379"

  rabbitmq_backend_microservice:
    image: rabbitmq:3-management
    ports:
      - "15672:15672"
    expose:
      - "15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest

  celery_worker_microservice:
    build:
      context: .
      dockerfile: Dockerfiles/dev.dockerfile
    env_file:
      - env/prod.env
    environment:
      REDIS_HOST: 'redis'
      REDIS_PORT: '6379'
      BROKER_URL: ${BROKER}
      RESULT_BACKEND: ${BACKEND}
      C_FORCE_ROOT: '1'
      CELERY_BROKER_CONNECTION_RETRY: 'True'
      CELERY_BROKER_CONNECTION_MAX_RETRIES: '100'
    command: [ "celery", "-A", "config.celery_config.app", "worker", "-P", "eventlet", "--loglevel=info" ]
    volumes:
      - .:/app

  fastapi_backend_microservice:
    build:
      context: .
      dockerfile: Dockerfiles/dev.dockerfile
    ports:
      - "7000:7000"
    env_file:
      - env/prod.env
    environment:
      REDIS_HOST: 'redis'
      REDIS_PORT: '6379'
    volumes:
      - .:/app
    depends_on:
      - db_postgresql_microservice
      - redis_backend_microservice
      - rabbitmq_backend_microservice